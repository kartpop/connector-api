package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"log"
	"strconv"

	"github.com/sede-x/gopoc-connector/pkg/controllers/graphqlapi/graph/model"
	"github.com/sede-x/gopoc-connector/pkg/models"
)

// Connectors is the resolver for the connectors field.
func (r *queryResolver) Connectors(ctx context.Context) ([]*model.Connector, error) {
	dbcons, err := r.ConnectorLogic.GetAllConnectors()
	if err != nil {
		log.Fatalln(err.Error())
	}

	var connectors []*model.Connector
	for i := 0; i < len(*dbcons); i++ {
		con := (*dbcons)[i]
		convertedcon := convertToGraphConnector(con)
		connectors = append(connectors, &convertedcon)
	}

	return connectors, nil
}

func convertToGraphConnector(con models.Connector) model.Connector {
	var connector model.Connector
	connector.ID = strconv.Itoa(con.Id)
	connector.StationID = con.StationId
	connector.ChargeSpeed = con.ChargeSpeed
	connector.Type = con.Type
	connector.Active = con.Active

	return connector
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
type mutationResolver struct{ *Resolver }
